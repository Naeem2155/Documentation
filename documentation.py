# -*- coding: utf-8 -*-
"""documentation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Cu7pTr5gqzKmP6jJ5lyENFjwuGyMwUDd
"""

import cv2

def process_image(image):
    """
    Process an input image using OpenCV.

    Args:
        image (numpy.ndarray): Input image to be processed.

    Returns:
        numpy.ndarray: Processed image.
    """
    # Convert the image to grayscale
    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # Apply a Gaussian blur to reduce noise
    blurred_image = cv2.GaussianBlur(gray_image, (5, 5), 0)

    # Perform an edge detection operation using Canny
    edges = cv2.Canny(blurred_image, 50, 150)

    # Perform further image processing steps as needed

    return edges

if __name__ == "__main__":
    # Load an input image
    input_image = cv2.imread("input.jpg")

    # Process the image
    processed_image = process_image(input_image)

    # Display the processed image
    cv2.imshow("Processed Image", processed_image)

    # Wait for a key press and then close the window
    cv2.waitKey(0)
    cv2.destroyAllWindows()